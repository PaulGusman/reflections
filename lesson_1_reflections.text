How did viewing a diff between two versions of a file help you see the bug that was introduced?

By calling diff, I was able to see the portions of code that had changed between the two files. Looking at what was
working in one version, and what broke in the other.

Sub-Note:

Using GitBash,
atom filename.text
will open a new file with that name


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- the capability to revert back to previous, working versions will help in the search for bugs

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having
versions automatically saved, like Google Docs does?

- the pros of saving manually is the ability to have each commit be a significant change. vs many
  negligible changes to sift thru.


  Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others,
   like Google Docs, treat each file separately?

How can you use the commands git log and git diff to view the history of files?
- git log shows all changes of a repository
- git diff compares two commit ids


Now that you have your workspace set up, what do you want to try using Git for?
- Doing stuff


How might using version control make you more confident to make changes that could break something?
- Version Control is a safety net for experimentation
